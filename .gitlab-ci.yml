image: $DOCKER_REGISTRY_PREFIX/2smart/utils/combined-ci-image:buildx

stages:
  - test
  - test-build
  - load_hardware
  - build
  - release
  - buildx

before_script:
  - git clone https://oauth2:$ACCESS_TOKEN@$DOCKER_UTILS_REPO_URL
  - mv docker-utils/utils.sh docker.sh

before_script:
  - git clone https://oauth2:$ACCESS_TOKEN@$DOCKER_UTILS_REPO_URL
  - mv docker-utils/utils.sh docker.sh

services:
  - name: $DOCKER_REGISTRY_PREFIX/2smart/base-images/docker-dind
    alias: docker
    command: [ "--experimental" ]

lint:
  before_script:
    - apk add make gcc g++ python3 linux-headers udev
    - npm install serialport --build-from-source
    - npm i
  stage: test
  script:
    - npm run test:lint
  only:
    - 'merge_requests'
    - 'master'

load_hardware:
  before_script:
    - apk add make gcc g++ python3 linux-headers udev
    - npm install serialport --build-from-source
    - npm i
  stage: load_hardware
  script:
    - source ./.build/reload_hardware.sh
  only:
    - 'master'

build:
  stage: build
  script:
    - ./docker.sh rundaemon
    - ./docker.sh build
    - ./docker.sh push
    - ./docker.sh push_bridge_type_to_demo
  only:
    - 'master'

release:
  stage: release
  script:
    - ./docker.sh rundaemon
    - ./docker.sh release_bridge_type
  only:
    - 'release'

buildx:
  stage: buildx
  script:
    - ./docker.sh rundaemon
    - ./docker.sh login
    - SOURCE_TAG=$MULTIPLATFORM_TAG ./docker.sh buildx
  when: manual
  allow_failure: true